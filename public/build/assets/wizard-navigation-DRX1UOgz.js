document.addEventListener("alpine:init",()=>{Alpine.data("wizardNavigation",(t={})=>({steps:t.steps||[],currentStep:t.initialStep||0,allowBackNavigation:!1!==t.allowBackNavigation,showProgressBar:!1!==t.showProgressBar,showBreadcrumbs:!1!==t.showBreadcrumbs,completedSteps:new Set,validationErrors:{},isValidating:!1,isNavigating:!1,loadingManager:null,activeLoadings:new Map,animationDuration:300,init(){this.loadingManager=window.loadingManager,this.animationManager=window.animationManager,this.steps.length&&(this.setupEventListeners(),this.validateCurrentStep())},setupEventListeners(){this.$el.addEventListener("step:validated",t=>{this.handleStepValidation(t.detail)}),this.$el.addEventListener("step:completed",t=>{this.markStepCompleted(t.detail.stepIndex)}),this.$el.addEventListener("wizard:navigate",t=>{this.navigateToStep(t.detail.stepIndex)})},canNavigateToStep(t){if(t<0||t>=this.steps.length)return!1;if(t<this.currentStep&&this.allowBackNavigation)return!0;if(t===this.currentStep)return!0;if(t>this.currentStep){for(let e=0;e<t;e++)if(!this.isStepCompleted(e)&&!this.steps[e].isOptional)return!1;return!0}return!1},async navigateToStep(t){var e;if(this.isNavigating||!this.canNavigateToStep(t))return!1;this.isNavigating=!0;let a=null;this.loadingManager&&(a=this.loadingManager.showGlobalLoading(`Navegando al paso ${t+1}...`,!1));try{if(t>this.currentStep){a&&this.loadingManager.updateGlobalProgress(25,"Validando paso actual...");if(!(await this.validateCurrentStep()))return a&&this.loadingManager.hideGlobalLoading(),this.loadingManager&&this.loadingManager.showToast("Por favor corrige los errores antes de continuar","error"),this.isNavigating=!1,!1}a&&this.loadingManager.updateGlobalProgress(50,"Preparando siguiente paso..."),await this.animateStepTransition(this.currentStep,t),a&&this.loadingManager.updateGlobalProgress(75,"Cargando contenido...");const i=this.currentStep;return this.currentStep=t,this.$dispatch("wizard:step-changed",{previousStep:i,currentStep:this.currentStep,stepData:this.getCurrentStepData()}),a&&this.loadingManager.updateGlobalProgress(100,"Completado"),await new Promise(t=>setTimeout(t,500)),this.validateCurrentStep(),this.loadingManager&&this.loadingManager.showToast(`Paso ${t+1}: ${(null==(e=this.steps[t])?void 0:e.title)||"Sin tÃ­tulo"}`,"success",3e3),!0}catch(i){return this.loadingManager&&this.loadingManager.showToast("Error al navegar entre pasos","error"),!1}finally{a&&this.loadingManager.hideGlobalLoading(),this.isNavigating=!1}},async nextStep(){return await this.navigateToStep(this.currentStep+1)},async previousStep(){return await this.navigateToStep(this.currentStep-1)},async validateCurrentStep(){const t=this.getCurrentStep();if(!t)return!1;this.isValidating=!0,this.clearStepErrors(this.currentStep);let e=null;if(this.loadingManager){const t=this.$el.querySelector(`[data-step="${this.currentStep}"]`);t&&(e=this.loadingManager.showFormLoading(t,"Validando campos..."))}try{const e=await new Promise(e=>{this.$dispatch("wizard:validate-step",{stepIndex:this.currentStep,stepId:t.id,callback:e}),setTimeout(()=>e({isValid:!0}),1e4)});if(e.isValid)this.markStepCompleted(this.currentStep),this.loadingManager&&this.loadingManager.showToast(`Paso ${this.currentStep+1} validado correctamente`,"success",2e3);else if(this.setStepErrors(this.currentStep,e.errors||{}),this.loadingManager){const t=Object.keys(e.errors||{}).length;this.loadingManager.showToast(`Se encontraron ${t} errores en este paso`,"error")}return e.isValid}catch(a){return this.loadingManager&&this.loadingManager.showToast("Error al validar el paso","error"),!1}finally{e&&this.loadingManager.hideFormLoading(e),this.isValidating=!1}},handleStepValidation(t){const{stepIndex:e,isValid:a,errors:i}=t;a?(this.markStepCompleted(e),this.clearStepErrors(e)):this.setStepErrors(e,i||{})},markStepCompleted(t){if(this.completedSteps.add(t),this.animationManager){const e=this.$el.querySelector(`[data-step-nav="${t}"]`);e&&this.animationManager.animateStepCompletion(e,t)}},isStepCompleted(t){return this.completedSteps.has(t)},setStepErrors(t,e){this.validationErrors[t]=e},clearStepErrors(t){delete this.validationErrors[t]},getStepErrors(t){return this.validationErrors[t]||{}},hasStepErrors(t){const e=this.getStepErrors(t);return Object.keys(e).length>0},async animateStepTransition(t,e){const a=e>t?"forward":"backward";if(this.animationManager)return this.animationManager.animateWizardTransition(t,e,a),void(await new Promise(t=>setTimeout(t,this.animationDuration)));const i=this.$el.querySelector(`[data-step="${t}"]`),r=this.$el.querySelector(`[data-step="${e}"]`);i&&r&&(i.classList.add("wizard-step-exit",`wizard-step-exit-${a}`),r.classList.remove("hidden"),r.classList.add("wizard-step-enter",`wizard-step-enter-${a}`),await new Promise(t=>setTimeout(t,this.animationDuration)),i.classList.add("hidden"),i.classList.remove("wizard-step-exit",`wizard-step-exit-${a}`),r.classList.remove("wizard-step-enter",`wizard-step-enter-${a}`))},getCurrentStep(){return this.steps[this.currentStep]||null},getCurrentStepData(){const t=this.getCurrentStep();return t?{index:this.currentStep,id:t.id,title:t.title,description:t.description,isOptional:t.isOptional||!1,isCompleted:this.isStepCompleted(this.currentStep),hasErrors:this.hasStepErrors(this.currentStep)}:null},getProgressPercentage(){return 0===this.steps.length?0:Math.round(this.completedSteps.size/this.steps.length*100)},getStepStatus(t){return t===this.currentStep?this.hasStepErrors(t)?"error":"current":this.isStepCompleted(t)?"completed":this.canNavigateToStep(t)?"available":"disabled"},reset(){this.currentStep=0,this.completedSteps.clear(),this.validationErrors={}},jumpToStep(t){return this.navigateToStep(t)},isFirstStep(){return 0===this.currentStep},isLastStep(){return this.currentStep===this.steps.length-1},canGoNext(){return!this.isLastStep()&&this.canNavigateToStep(this.currentStep+1)},canGoPrevious(){return!this.isFirstStep()&&this.allowBackNavigation}}))});
